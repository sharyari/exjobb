module ProblemFormulation where
import Data.Word
import DataTypes


symbols :: Symbols
symbols = [[0,1,2,3,4],[0,1,2,3,4],[0,1,2,3,4]]

initial :: [Word8]
initial = [1,1,1]


bad :: [(Int, Word8)]
bad = [(0,4),(1,4),(2,4)]

transitions :: [([(Int,Int,Int)], (Int,String,CWord))]
transitions = [p0r0,p0r1,p0r2,p0r3,p0r4,p0r5,p1r0,p1r1,p1r2,p1r3,p1r4,p1r5,p1r6,p2r0,p2r1,p2r2]

p0r0 = ([(0,1,1)],(0,"!",[0]))
p0r1 = ([(0,1,2)],(2,"?",[4]))
p0r2 = ([(0,2,2)],(2,"?",[4]))
p0r3 = ([(0,3,4)],(2,"?",[4]))
p0r4 = ([(0,2,3)],(1,"?",[2]))
p0r5 = ([(0,3,3)],(1,"?",[2]))
p1r0 = ([(1,2,2)],(2,"!",[4]))
p1r1 = ([(1,2,2)],(0,"!",[1]))
p1r2 = ([(1,3,3)],(1,"!",[2]))
p1r3 = ([(1,1,5)],(0,"?",[0]))
p1r4 = ([(1,5,2)],(2,"!",[4]))
p1r5 = ([(1,2,6)],(1,"?",[3]))
p1r6 = ([(1,6,3)],(1,"!",[2]))
p2r0 = ([(2,2,2)],(1,"!",[3]))
p2r1 = ([(2,1,3)],(0,"?",[1]))
p2r2 = ([(2,3,2)],(1,"!",[3]))

numStates :: [Int]
numStates = [4,6,4]


